services:
  server:
    container_name: pi-app-server
    build:
      context: ../
      dockerfile: ./deployments/docker/server.Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config 
    networks:
      - pi-app-network

  auth:
    container_name: pi-app-auth
    build:
      context: ../
      dockerfile: ./deployments/docker/auth.Dockerfile
    ports:
      - "8081:8081"
    environment:
      - AUTH_CONFIG_FILE_PATH=${AUTH_CONFIG_FILE_PATH}
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
      - AUTH_JWT_KEY=${AUTH_JWT_KEY}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
    networks:
      - pi-app-network

  user:
    container_name: pi-app-user
    build:
      context: ../
      dockerfile: ./deployments/docker/user.Dockerfile
    ports:
      - "8082:8081"
    environment:
      - USER_CONFIG_FILE_PATH=${USER_CONFIG_FILE_PATH}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
      - GOOGLE_REGION=${GOOGLE_REGION}
      - GOOGLE_CLOUD_POSTGRESQL_DB_INSTANCE_NAME=${GOOGLE_CLOUD_POSTGRESQL_DB_INSTANCE_NAME}
      - GOOGLE_CLOUD_POSTGRESQL_DB_NAME=${GOOGLE_CLOUD_POSTGRESQL_DB_NAME}
      - GOOGLE_CLOUD_POSTGRESQL_DB_USER=${GOOGLE_CLOUD_POSTGRESQL_DB_USER}
      - GOOGLE_CLOUD_POSTGRESQL_DB_PASSWORD=${GOOGLE_CLOUD_POSTGRESQL_DB_PASSWORD}
    networks:
      - pi-app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - pi-app-network

volumes:
  caddy_data:
  caddy_config:


networks:
  pi-app-network:
    driver: bridge